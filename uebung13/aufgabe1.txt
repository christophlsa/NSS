a)
>>> print lp.parse(r'(\P.exists x.(dog(x) & P(x)))(\y.bark(y))').simplify()
exists x.(dog(x) & bark(x))

    (\P.exists x.(dog(x) & P(x)))(\y.bark(y))
=== (exists x.(dog(x) & (\y.bark(x)))
=== (exists x.(dog(x) & (bark(x))))
=== (exists x.(dog(x) & bark(x)))


b)

>>> print lp.parse(r'(\P.P(fido))(\x.bark(x))').simplify()
bark(fido)

    (\P.P(fido))(\x.bark(x))
=== (\x.bark(fido))
=== (bark(fido))
=== bark(fido)


c)

>>> print lp.parse(r'(\P . all x . (dog(x) -> bark(x)))(\P . all x . (dog(x) -> P(x)))').simplify()
all x.(dog(x) -> bark(x))

    (\P . all x . (dog(x) -> bark(x)))(\P . all x . (dog(x) -> P(x)))
=== (all x . (dog(x) -> bark(x)))
=== all x . (dog(x) -> bark(x))


d)

>>> print lp.parse(r'(\P . P (P)) (\P . P (P))').simplify()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python2.7/site-packages/nltk/sem/logic.py", line 645, in simplify
    return function.term.replace(function.variable, argument).simplify()
  File "/usr/lib/python2.7/site-packages/nltk/sem/logic.py", line 645, in simplify
    return function.term.replace(function.variable, argument).simplify()
  File "/usr/lib/python2.7/site-packages/nltk/sem/logic.py", line 645, in simplify
    return function.term.replace(function.variable, argument).simplify()
  ...
RuntimeError: maximum recursion depth exceeded while calling a Python object

    (\P . P (P)) (\P . P (P))
=== ((\P . P (P)) ((\P . P (P))))
=== ((\P . P (P)) (\P . P (P)))
=== (\P . P (P)) (\P . P (P))

Endlosrekursion!
